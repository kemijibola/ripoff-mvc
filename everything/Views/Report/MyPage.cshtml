@model everything.ViewModels.UserReportsandQuestionsWithOwner
@using PagedList.Mvc;
@using everything.Helpers
@using System.Text.RegularExpressions;
<link href="~/Content/PagedList.css" rel="stylesheet" />

@{
    ViewBag.Title = "My Rip-Off page";
}

<style>
.pagination>li>a,
.pagination>li>span 
 { border-radius: 50% !important;margin: 0 5px;}

    .panel-table .panel-body{
  padding:0;
}

.panel-table .panel-body .table-bordered{
  border-style: none;
  margin:0;
}

.panel-table .panel-body .table-bordered > thead > tr > th:first-of-type {
    text-align:center;
    width: 100px;
}

.panel-table .panel-body .table-bordered > thead > tr > th:last-of-type,
.panel-table .panel-body .table-bordered > tbody > tr > td:last-of-type {
  border-right: 0px;
}

.panel-table .panel-body .table-bordered > thead > tr > th:first-of-type,
.panel-table .panel-body .table-bordered > tbody > tr > td:first-of-type {
  border-left: 0px;
}

.panel-table .panel-body .table-bordered > tbody > tr:first-of-type > td{
  border-bottom: 0px;
}

.panel-table .panel-body .table-bordered > thead > tr:first-of-type > th{
  border-top: 0px;
}

.panel-table .panel-footer .pagination{
  margin:0; 
}

/*
used to vertically center elements, may need modification if you're not using default sizes.
*/
.panel-table .panel-footer .col{
 line-height: 34px;
 height: 34px;
}

.panel-table .panel-heading .col h3{
 line-height: 30px;
 height: 30px;
}

.panel-table .panel-body .table-bordered > tbody > tr > td{
  line-height: 34px;
}

</style>

<section id="inner-banner">

    <div class="container">

        <h1>@ViewBag.Title</h1>

    </div>

</section>
<div class="clearfix">
    </div>
<div class="clearfix">
</div>
<div class="clearfix">
</div>
<div class="container">
    <div class="row">
        <div class="col-md-12 col-sm-12">
            <div class="panel-danger ">
                <div class="panel-heading panel-table">
                    <div class="row">
                        <div class="col col-xs-6">
                            <strong>My Complaint</strong>
                        </div>
                        <div class="col col-xs-6 text-right">
                            @Html.ActionLink("File a complaint", "Create", "Report",null,new {@class = "btn btn-sm btn-danger btn-create", @title = "Click to file new report"})
                            
                        </div>
                    </div>
                </div>
                <div class="panel-body">
                    <table class="table table-striped table-bordered table-list">
                        <thead>
                            <tr>
                                <th><em class="fa fa-cog">&nbsp;Update/Request/Upload</em></th>
                                <th class="hidden-xs">ID</th>
                                <th>Report#</th>
                                <th>Status</th>
                                <th>Title</th>
                            </tr>
                        </thead>
                    @foreach (var item in Model.UserReports.Select((x, b) => new { Data = x, Index = b }))
                    {
                        bool reportStatus = item.Data.Status;
                        bool requestStatus = item.Data.hasRequestedLegalService;
                        var id = Guid.NewGuid().ToString();
                        string sm_PageTitle = Regex.Replace(item.Data.Title, "[^A-Za-z0-9]", "-");
                        <tbody>
                            <tr>
                                <td align="center">
                                   @if (reportStatus)
                                   {

                                        <a href="@Url.Action("Update","Report",new {title= sm_PageTitle, page=item.Data.ReportId})" class="btn btn-info" title="Add update to report">Add update@*<em class="fa fa-pencil"></em>*@
                                        </a>
                                    }
                                    @if (reportStatus && !requestStatus)
                                    {
                                        <a href="@Url.Action("Create","RequestLawyer",new {title= sm_PageTitle,page = item.Data.ReportId })" class="btn btn-default" title="Click to request legal service">Request a lawyer
                                            
                                        </a>
                                    }
                                    @if (reportStatus)
                                    {

                                        <a href="@Url.Action("FileUpload","Report",new {title= sm_PageTitle, page=item.Data.ReportId})" class="btn btn-success" title="Click to upload image/video for complaint">
                                            Upload image/video
                                            @*<em class="fa fa-upload"></em>*@
                                        </a>
                                    }
                                    @*<a class="btn btn-danger"><em class="fa fa-trash"></em></a>*@
                                </td>
                                <td class="hidden-xs"><span>@(item.Index + ((Model.UserReports.PageNumber - 1) * Model.UserReports.PageSize) + 1)</span></td>
                                <td>@Html.DisplayFor(modelItem => item.Data.ReportId)</td>
                                <td>
                                    @{
                                        if (@item.Data.Status == true)
                                        {
                                            <span class="badge">Approved</span>
                                        }
                                        if (@item.Data.Status == false)
                                        {
                                            <span class="badge bg-danger">Not approved</span>
                                        }
                                        
                                    }
                                
                                </td>
                                <td>
                                      <a href="@Url.Action("ReportDetails","Report", new {title=sm_PageTitle, page=item.Data.ReportId, iD=id},null)">
                                      @Html.DisplayFor(modelItem => item.Data.Title)
                                      </a>
                                    @if (requestStatus)
                                    {
                                        <span class="pull-right"><i class="fa fa-legal fa-2x"></i></span>
                                    }
                                </td>
                            </tr>
                        </tbody>
                    }
                    </table>

                </div>
                <div class="panel-footer danger">
                    <div class="row">
                        <div class="col col-xs-4">
                            <b>Page @(Model.UserReports.PageCount < Model.UserReports.PageNumber ? 0 : Model.UserReports.PageNumber) of @Model.UserReports.PageCount</b>
                        </div>
                        <div class="col col-xs-8">
                            
                            <span>

                                @Html.PagedListPager(Model.UserReports, rpage => Url.Action("MyPage", new { rpage, sort = ViewBag.CurrentSort, search = ViewBag.CurrentSearch }))
                            </span>
                        </div>
                    </div>
                </div>
            </div>

        </div>
        <div class="clearfix">
        </div><div class="clearfix">
         </div>
        <hr>

        <div class="col-md-12 col-sm-12">
            <div class="panel-info ">
                <div class="panel-heading panel-table">
                    <div class="row">
                        <div class="col col-xs-6">
                            <strong>My Ask2Buy</strong>
                        </div>
                        <div class="col col-xs-6 text-right">
                            @Html.ActionLink("Ask a Question","Create", "Question", null, new { @class = "btn btn-sm btn-primary btn-create",@title = "Click to ask new question" })
                        </div>
                    </div>
                </div>
                <div class="panel-body">
                    <table class="table table-striped table-bordered table-list">
                        <thead>
                            <tr>
                                @*<th><em class="fa fa-cog"></em></th>*@
                                <th class="hidden-xs">ID</th>
                                <th>A2B#</th>
                                <th>Status</th>
                                <th>Title</th>
                            </tr>
                        </thead>
                    @foreach (var item in Model.UserQuestions.Select((x, b) => new { Data = x, Index = b }))
                    {
                        string sm_PageTitle = Regex.Replace(item.Data.Title, "[^A-Za-z0-9]", "-");
                        <tbody>
                            <tr>
                                @*<td align="center">
                                    <a class="btn btn-default"><em class="fa fa-pencil"></em></a>
                                </td>*@
                                <td class="hidden-xs"><span>@(item.Index + ((Model.UserReports.PageNumber - 1) * Model.UserReports.PageSize) + 1)</span></td>
                                <td>@Html.DisplayFor(modelItem => item.Data.QuestionId)</td>
                                <td>@{
                                    if (@item.Data.isAnswered == true)
                                    {
                                        <span class="badge">Answered</span>
                                    }
                                    if (@item.Data.isAnswered == false)
                                    {
                                        <span class="badge bg-danger">Not answered</span>
                                    }
                                }</td>
                                <td>
                                    @{ 
                                        var id = Guid.NewGuid().ToString();
                                    }
                                  <a href="@Url.Action("Thread","Question", new {title=sm_PageTitle,page = item.Data.QuestionId,iD = id},null)">
                                            @Html.DisplayFor(modelItem => item.Data.Title)
                                 </a>
                                </td>
                            </tr>
                        </tbody>
                        }
                    </table>

                </div>
                <div class="panel-footer danger">
                    <div class="col col-xs-4">
                        <b>Page @(Model.UserQuestions.PageCount < Model.UserQuestions.PageNumber ? 0 : Model.UserQuestions.PageNumber) of @Model.UserQuestions.PageCount</b>
                    </div>
                    <div class="col col-xs-8">

                        <span>

                            @Html.PagedListPager(Model.UserQuestions, qpage => Url.Action("MyPage", new { qpage, sort = ViewBag.CurrentSort, search = ViewBag.CurrentSearch }))
                        </span>
                    </div>
                    </div>
                </div>
            </div>

        </div>
    </div>
</div>