@using PagedList.Mvc;
@model PagedList.IPagedList<everything.Models.ReportUpdate>

@{
    ViewBag.Title = "Updated Reports";
}


<div class="row">
    <div class="col-lg-12">

        <div class="row">
            <div class="col-lg-12">
                <ol class="breadcrumb">
                    <li><a href="#">Home</a></li>
                    <li class="active"><span>Reports</span></li>
                </ol>

                <h1>Updated Reports <small>Complaints</small></h1>
            </div>
        </div>


        <div class="row">
            <div class="col-lg-12">
                <div class="main-box clearfix">

                    <div class="main-box-body clearfix">
                        <div class="table-responsive">
                            <table class="table">
                                <thead>
                                    <tr>
                                        <th>Report Title</th>
                                        <th>Update Added</th>
                                        <th class="text-center"><em class="fa fa-cog">&nbsp;Action</em></th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in Model.Select((x, b) => new { Data = x, Index = b }))
                                    {
                                        string UpdateText = TruncateAtWord(item.Data.Update, 70);
                                        var id = Guid.NewGuid().ToString();
                                        <tr>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.Data.ReportTitle)
                                            </td>
                                            <td>
                                                @Html.DisplayFor(modelItem => UpdateText)
                                            </td>
                                            <td style="width: 35%;" class="text-right">

                                                <a href="@Url.Action("CreateUpdate","Legal",new {rid=item.Data.ReportUpdateId, page = item.Data.ReportId})" class="table-link success" title="Click to approve report">
                                                    <span class="fa-stack">
                                                        <i class="fa fa-square fa-stack-2x"></i>
                                                        <i class="fa fa-pencil fa-stack-1x fa-inverse"></i>
                                                    </span>
                                                    Click to Advice »
                                                </a>
                                                <a href="@Url.Action("ReportDetails","Report",new { title = item.Data.ReportTitle,page=item.Data.ReportId,iD = Guid.NewGuid().ToString(),area=""})" class="table-link primary" title="Click to view report on main site">
                                                    <span class="fa-stack">
                                                        <i class="fa fa-square fa-stack-2x"></i>
                                                        <i class="fa fa-search-plus fa-stack-1x fa-inverse"></i>
                                                    </span>
                                                    View on main site »
                                                </a>

                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                        <ul class="pagination pull-right">
                            <b>Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount</b>
                            <span>

                                @Html.PagedListPager(Model, page => Url.Action("Update", new { page, sort = ViewBag.CurrentSort, search = ViewBag.CurrentSearch }))
                            </span>
                        </ul>
                        <a href="@Url.Action("Update", "Legal", new { Area = "Rap" },null)" class="btn btn-default pull-left">
                            <i class="fa fa-refresh fa-lg"></i> Refresh
                        </a>
                    </div>

                </div>
            </div>
        </div>

    </div>
</div>

@functions
             {
    public static string TruncateAtWord(string textToTruncate, int length)
    {
        if (textToTruncate == null || textToTruncate.Length < length)
            return textToTruncate;
        int iNextSpace = textToTruncate.LastIndexOf(" ", length);
        return string.Format("{0}", textToTruncate.Substring(0, (iNextSpace > 0) ? iNextSpace : length).Trim());
    }
}